<!DOCTYPE html>
<html lang="vi" class="h-full">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Qu·∫£n L√Ω Ph√≤ng GYM</title>

    <!-- Flowbite CSS (includes Tailwind CSS) -->
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-pVIb6q3lP4N7GnS5/g6h8vY0vxM09+ZZ2E0c65c4Vp+4V+fD7zJAq0ZWNvlht8q6mJXjad7ym1XoyYdU3NGk6Q==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Backup Font Awesome CDN -->
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.4.0/css/all.css" onerror="this.onerror=null;this.href='https://use.fontawesome.com/releases/v6.4.0/css/all.css';" />

    <!-- Swiper CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    @await RenderSectionAsync("Styles", required: false)
</head>

<body class="h-full">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/" class="text-2xl font-bold text-blue-600 " style="color: #2563eb;">
                        üèãÔ∏è GYM Manager
                    </a>
                </div>

                <div class="hidden md:flex items-center space-x-8">
                    <a href="/"
                        class="text-gray-700 hover:text-blue-600 ">Trang
                        ch·ªß</a>
                    <a href="/Home/Packages"
                        class="text-gray-700 hover:text-blue-600 ">G√≥i
                        t·∫≠p</a>
                    <a href="/Home/Classes"
                        class="text-gray-700 hover:text-blue-600 ">L·ªõp
                        h·ªçc</a>
                    <a href="/Home/About"
                        class="text-gray-700 hover:text-blue-600 ">Gi·ªõi
                        thi·ªáu</a>
                    <a href="/Home/Contact"
                        class="text-gray-700 hover:text-blue-600 ">Li√™n
                        h·ªá</a>
                </div>

                <div class="flex items-center space-x-4">
                    @* <!-- Dark mode toggle -->
                    <button id="theme-toggle" type="button"
                        class="text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 rounded-lg text-sm p-2.5">
                        <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                        </svg>
                        <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                                fill-rule="evenodd" clip-rule="evenodd"></path>
                        </svg>
                    </button> *@

                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <!-- User Avatar Dropdown -->
                        <div class="relative">
                            <button type="button"
                                class="flex items-center text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 "
                                id="user-menu-button" aria-expanded="false" data-dropdown-toggle="user-dropdown"
                                data-dropdown-placement="bottom">
                                <span class="sr-only">Open user menu</span>
                                <div
                                    class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium">
                                    @(User.Identity.Name?.Substring(0, 1).ToUpper() ?? "U")
                                </div>
                            </button>
                            <!-- Dropdown menu -->
                            <div class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow "
                                id="user-dropdown">
                                <div class="px-4 py-3">
                                    <span class="block text-sm text-gray-900 ">@User.Identity.Name</span>
                                    <span
                                        class="block text-sm text-gray-500 truncate ">@User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value</span>
                                </div>
                                <ul class="py-2" aria-labelledby="user-menu-button">
                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Staff"))
                                    {
                                        <li>
                                            <a href="/Home/AdminDashboard"
                                                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 ">Dashboard</a>
                                        </li>
                                    }
                                    <li>
                                        <a href="/Profile"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 ">H·ªì
                                            s∆°</a>
                                    </li>
                                    <li>
                                        <a href="/Settings"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 ">C√†i
                                            ƒë·∫∑t</a>
                                    </li>
                                    <li>
                                        <a href="/Auth/Logout"
                                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 ">ƒêƒÉng
                                            xu·∫•t</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                    else
                    {
                        <a href="/Auth/Login"
                            class="text-gray-700 hover:text-blue-600 ">ƒêƒÉng
                            nh·∫≠p</a>
                        <a href="/Auth/Register"
                            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition duration-300"
                            style="background-color: #2563eb; color: white;">ƒêƒÉng k√Ω</a>
                    }
                </div>

                <!-- Mobile menu button -->
                <div class="md:hidden flex items-center">
                    <button type="button"
                        class="text-gray-700 hover:text-blue-600 "
                        data-collapse-toggle="mobile-menu">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Mobile menu -->
        <div class="md:hidden hidden" id="mobile-menu">
            <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-gray-50 ">
                <a href="/"
                    class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">Trang
                    ch·ªß</a>
                <a href="/Home/Packages"
                    class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">G√≥i
                    t·∫≠p</a>
                <a href="/Home/Classes"
                    class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">L·ªõp
                    h·ªçc</a>
                <a href="/Home/About"
                    class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">Gi·ªõi
                    thi·ªáu</a>
                <a href="/Home/Contact"
                    class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">Li√™n
                    h·ªá</a>
                <div class="border-t border-gray-200 pt-3">
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <div class="flex items-center px-3 py-2">
                            <div
                                class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium mr-3">
                                @(User.Identity.Name?.Substring(0, 1).ToUpper() ?? "U")
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-900 ">@User.Identity.Name</div>
                                <div class="text-sm text-gray-500 ">
                                    @User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value</div>
                            </div>
                        </div>
                        @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Staff"))
                        {
                            <a href="/Home/AdminDashboard"
                                class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">Dashboard</a>
                        }
                        <a href="/Profile"
                            class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">H·ªì
                            s∆°</a>
                        <a href="/Settings"
                            class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">C√†i
                            ƒë·∫∑t</a>
                        <a href="/Auth/Logout"
                            class="block px-3 py-2 text-red-600 hover:text-red-700 ">ƒêƒÉng
                            xu·∫•t</a>
                    }
                    else
                    {
                        <a href="/Auth/Login"
                            class="block px-3 py-2 text-gray-700 hover:text-primary-600 ">ƒêƒÉng
                            nh·∫≠p</a>
                        <a href="/Auth/Register"
                            class="block px-3 py-2 text-primary-600 font-medium">ƒêƒÉng k√Ω</a>
                    }
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded relative" role="alert">
                <span class="block sm:inline">@TempData["SuccessMessage"]</span>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded relative" role="alert">
                <span class="block sm:inline">@TempData["ErrorMessage"]</span>
            </div>
        }

        @RenderBody()
    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <div>
                    <h3 class="text-lg font-semibold mb-4">GYM Manager</h3>
                    <p class="text-gray-400">H·ªá th·ªëng qu·∫£n l√Ω ph√≤ng gym hi·ªán ƒë·∫°i v√† chuy√™n nghi·ªáp.</p>
                </div>
                <div>
                    <h4 class="text-md font-semibold mb-4">D·ªãch v·ª•</h4>
                    <ul class="space-y-2 text-gray-400">
                        <li><a href="/Home/Packages" class="hover:text-white">G√≥i t·∫≠p</a></li>
                        <li><a href="/Home/Classes" class="hover:text-white">L·ªõp h·ªçc</a></li>
                        <li><a href="#" class="hover:text-white">Hu·∫•n luy·ªán c√° nh√¢n</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="text-md font-semibold mb-4">H·ªó tr·ª£</h4>
                    <ul class="space-y-2 text-gray-400">
                        <li><a href="/Home/Contact" class="hover:text-white">Li√™n h·ªá</a></li>
                        <li><a href="/Home/About" class="hover:text-white">Gi·ªõi thi·ªáu</a></li>
                        <li><a href="/Home/Privacy" class="hover:text-white">Ch√≠nh s√°ch</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="text-md font-semibold mb-4">Li√™n h·ªá</h4>
                    <ul class="space-y-2 text-gray-400">
                        <li>üìß info@gymmanager.com</li>
                        <li>üìû (84) 123-456-789</li>
                        <li>üìç 123 ƒê∆∞·ªùng ABC, TP.HCM</li>
                    </ul>
                </div>
            </div>
            <div class="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
                <p>&copy; 2025 GYM Manager. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

    <!-- Swiper JS -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!-- Dark mode toggle script -->
    <script>
        var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
        var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

        // Initialize theme - default to light mode
        if (!('color-theme' in localStorage)) {
            localStorage.setItem('color-theme', 'light');
        }

        // Change the icons inside the button based on previous settings
        if (localStorage.getItem('color-theme') === 'dark') {
            document.documentElement.classList.add('dark');
            themeToggleLightIcon.classList.remove('hidden');
        } else {
            document.documentElement.classList.remove('dark');
            themeToggleDarkIcon.classList.remove('hidden');
        }

        var themeToggleBtn = document.getElementById('theme-toggle');

        themeToggleBtn.addEventListener('click', function () {
            // toggle icons inside button
            themeToggleDarkIcon.classList.toggle('hidden');
            themeToggleLightIcon.classList.toggle('hidden');

            // if set via local storage previously
            if (localStorage.getItem('color-theme')) {
                if (localStorage.getItem('color-theme') === 'light') {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                } else {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                }
                // if NOT set via local storage previously
            } else {
                if (document.documentElement.classList.contains('dark')) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                }
            }
        });

        // User dropdown functionality
        const userMenuButton = document.getElementById('user-menu-button');
        const userDropdown = document.getElementById('user-dropdown');

        if (userMenuButton && userDropdown) {
            userMenuButton.addEventListener('click', function () {
                userDropdown.classList.toggle('hidden');
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function (event) {
                if (!userMenuButton.contains(event.target) && !userDropdown.contains(event.target)) {
                    userDropdown.classList.add('hidden');
                }
            });
        }
    </script>

    <!-- Initialize Swiper -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const packagesSwiper = new Swiper('.packagesSwiper', {
                slidesPerView: 1,
                spaceBetween: 20,
                loop: true,
                autoplay: {
                    delay: 4000,
                    disableOnInteraction: false,
                },
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                breakpoints: {
                    640: {
                        slidesPerView: 2,
                        spaceBetween: 20,
                    },
                    1024: {
                        slidesPerView: 3,
                        spaceBetween: 30,
                    },
                    1280: {
                        slidesPerView: 4,
                        spaceBetween: 30,
                    }
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
