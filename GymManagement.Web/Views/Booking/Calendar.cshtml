@{
    ViewData["Title"] = "L·ªãch ƒë·∫∑t ch·ªó";
    Layout = "_Layout";
    var classes = ViewBag.Classes as IEnumerable<GymManagement.Web.Data.Models.LopHoc>;
}

<div class="p-6">
    <!-- Header -->
    <div class="mb-8">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 mb-2">üìÖ L·ªãch ƒë·∫∑t ch·ªó</h1>
                <p class="text-gray-600">Xem v√† qu·∫£n l√Ω l·ªãch ƒë·∫∑t ch·ªó t·ªïng quan</p>
            </div>
            <div class="flex gap-3">
                <a href="@Url.Action("Create")" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                    ‚ûï ƒê·∫∑t l·ªãch m·ªõi
                </a>
                <a href="@Url.Action("Index")" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                    üìã Danh s√°ch
                </a>
            </div>
        </div>
    </div>

    <!-- Calendar Controls -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <div class="flex flex-col md:flex-row justify-between items-center gap-4">
            <div class="flex items-center gap-4">
                <button id="prevMonth" class="p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                </button>
                <h2 id="currentMonth" class="text-xl font-semibold text-gray-900"></h2>
                <button id="nextMonth" class="p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </button>
            </div>
            
            <div class="flex items-center gap-4">
                <button id="todayBtn" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                    H√¥m nay
                </button>
                <div class="flex items-center gap-2">
                    <label for="viewSelect" class="text-sm font-medium text-gray-700">Ch·∫ø ƒë·ªô xem:</label>
                    <select id="viewSelect" class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="dayGridMonth">Th√°ng</option>
                        <option value="timeGridWeek">Tu·∫ßn</option>
                        <option value="timeGridDay">Ng√†y</option>
                        <option value="listWeek">Danh s√°ch</option>
                    </select>
                </div>
                <div class="flex items-center gap-2">
                    <label for="classFilter" class="text-sm font-medium text-gray-700">L·ªçc l·ªõp:</label>
                    <select id="classFilter" class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">T·∫•t c·∫£ l·ªõp</option>
                        @if (classes != null)
                        {
                            @foreach (var lopHoc in classes)
                            {
                                <option value="@lopHoc.LopHocId">@lopHoc.TenLop</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Calendar -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div id="calendar"></div>
    </div>

    <!-- Legend and Stats -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6">
        <!-- Legend -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">üé® Ch√∫ th√≠ch</h3>
            <div class="grid grid-cols-2 gap-4">
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-blue-500 rounded"></div>
                    <span class="text-sm text-gray-700">ƒê·∫∑t l·ªãch c·ªßa t√¥i</span>
                </div>
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-green-500 rounded"></div>
                    <span class="text-sm text-gray-700">L·ªõp h·ªçc kh·∫£ d·ª•ng</span>
                </div>
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-yellow-500 rounded"></div>
                    <span class="text-sm text-gray-700">S·∫Øp ƒë·∫ßy (>80%)</span>
                </div>
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-red-500 rounded"></div>
                    <span class="text-sm text-gray-700">ƒê√£ ƒë·∫ßy</span>
                </div>
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-gray-500 rounded"></div>
                    <span class="text-sm text-gray-700">ƒê√£ h·ªßy</span>
                </div>
                <div class="flex items-center gap-2">
                    <div class="w-4 h-4 bg-purple-500 rounded"></div>
                    <span class="text-sm text-gray-700">ƒê√£ tham gia</span>
                </div>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">üìä Th·ªëng k√™ nhanh</h3>
            <div class="grid grid-cols-2 gap-4">
                <div class="text-center p-3 bg-blue-50 rounded-lg">
                    <div class="text-2xl font-bold text-blue-600" id="totalBookings">-</div>
                    <div class="text-sm text-gray-600">T·ªïng ƒë·∫∑t l·ªãch</div>
                </div>
                <div class="text-center p-3 bg-green-50 rounded-lg">
                    <div class="text-2xl font-bold text-green-600" id="thisWeekBookings">-</div>
                    <div class="text-sm text-gray-600">Tu·∫ßn n√†y</div>
                </div>
                <div class="text-center p-3 bg-yellow-50 rounded-lg">
                    <div class="text-2xl font-bold text-yellow-600" id="upcomingBookings">-</div>
                    <div class="text-sm text-gray-600">S·∫Øp t·ªõi</div>
                </div>
                <div class="text-center p-3 bg-purple-50 rounded-lg">
                    <div class="text-2xl font-bold text-purple-600" id="completedBookings">-</div>
                    <div class="text-sm text-gray-600">ƒê√£ ho√†n th√†nh</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Today's Schedule -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">üìã L·ªãch h√¥m nay</h3>
        <div id="todaySchedule">
            <div class="text-center py-4 text-gray-500">
                <svg class="w-8 h-8 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <p>ƒêang t·∫£i l·ªãch h√¥m nay...</p>
            </div>
        </div>
    </div>
</div>

<!-- Event Details Modal -->
<div id="eventModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">Chi ti·∫øt s·ª± ki·ªán</h3>
                    <button onclick="closeEventModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <div id="eventDetails">
                    <!-- Event details will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick Booking Modal -->
<div id="quickBookingModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">ƒê·∫∑t l·ªãch nhanh</h3>
                    <button onclick="closeQuickBookingModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <div id="quickBookingContent">
                    <!-- Quick booking content will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        let calendar;
        let currentClassFilter = '';

        document.addEventListener('DOMContentLoaded', function() {
            initializeCalendar();
            loadTodaySchedule();
            loadQuickStats();
            
            // Event listeners
            document.getElementById('classFilter').addEventListener('change', function() {
                currentClassFilter = this.value;
                calendar.refetchEvents();
            });
            
            document.getElementById('viewSelect').addEventListener('change', function() {
                calendar.changeView(this.value);
            });
            
            document.getElementById('todayBtn').addEventListener('click', function() {
                calendar.today();
            });
        });

        function initializeCalendar() {
            const calendarEl = document.getElementById('calendar');
            
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'vi',
                headerToolbar: {
                    left: '',
                    center: '',
                    right: ''
                },
                height: 'auto',
                events: function(info, successCallback, failureCallback) {
                    loadCalendarEvents(info.start, info.end, successCallback, failureCallback);
                },
                eventClick: function(info) {
                    showEventDetails(info.event);
                },
                dateClick: function(info) {
                    showQuickBooking(info.date);
                },
                datesSet: function(info) {
                    updateMonthDisplay(info.start);
                },
                eventDidMount: function(info) {
                    // Add tooltip
                    info.el.setAttribute('title', info.event.title + ' - ' + info.event.extendedProps.status);
                }
            });
            
            calendar.render();
            
            // Custom navigation
            document.getElementById('prevMonth').addEventListener('click', () => calendar.prev());
            document.getElementById('nextMonth').addEventListener('click', () => calendar.next());
        }

        function loadCalendarEvents(start, end, successCallback, failureCallback) {
            const url = '@Url.Action("GetCalendarEvents", "Booking")';
            const params = new URLSearchParams({
                start: start.toISOString(),
                end: end.toISOString()
            });
            
            if (currentClassFilter) {
                params.append('classId', currentClassFilter);
            }
            
            fetch(`${url}?${params}`)
                .then(response => response.json())
                .then(data => {
                    successCallback(data);
                })
                .catch(error => {
                    console.error('Error loading calendar events:', error);
                    failureCallback(error);
                });
        }

        function updateMonthDisplay(date) {
            const monthNames = [
                'Th√°ng 1', 'Th√°ng 2', 'Th√°ng 3', 'Th√°ng 4', 'Th√°ng 5', 'Th√°ng 6',
                'Th√°ng 7', 'Th√°ng 8', 'Th√°ng 9', 'Th√°ng 10', 'Th√°ng 11', 'Th√°ng 12'
            ];
            
            const monthDisplay = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;
            document.getElementById('currentMonth').textContent = monthDisplay;
        }

        function showEventDetails(event) {
            const details = `
                <div class="space-y-4">
                    <div class="text-center">
                        <h4 class="text-xl font-semibold text-gray-900">${event.title}</h4>
                        <p class="text-gray-600">${event.start.toLocaleString('vi-VN')}</p>
                    </div>
                    <div class="border-t pt-4">
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-600">Tr·∫°ng th√°i:</span>
                                <span class="font-medium">${getStatusText(event.extendedProps.status)}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Th·ªùi gian:</span>
                                <span class="font-medium">${event.start.toLocaleTimeString('vi-VN', {hour: '2-digit', minute: '2-digit'})} - ${event.end.toLocaleTimeString('vi-VN', {hour: '2-digit', minute: '2-digit'})}</span>
                            </div>
                        </div>
                    </div>
                    <div class="flex gap-2 pt-4 border-t">
                        <button onclick="editBooking(${event.id})" class="flex-1 bg-blue-600 text-white px-4 py-2 rounded-md text-sm hover:bg-blue-700">
                            Ch·ªânh s·ª≠a
                        </button>
                        <button onclick="cancelBooking(${event.id})" class="flex-1 bg-red-600 text-white px-4 py-2 rounded-md text-sm hover:bg-red-700">
                            H·ªßy b·ªè
                        </button>
                    </div>
                </div>
            `;
            
            document.getElementById('eventDetails').innerHTML = details;
            document.getElementById('eventModal').classList.remove('hidden');
        }

        function showQuickBooking(date) {
            const content = `
                <div class="space-y-4">
                    <div class="text-center">
                        <h4 class="text-lg font-semibold text-gray-900">ƒê·∫∑t l·ªãch cho ng√†y</h4>
                        <p class="text-gray-600">${date.toLocaleDateString('vi-VN')}</p>
                    </div>
                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Ch·ªçn l·ªõp h·ªçc:</label>
                            <select id="quickBookingClass" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                                <option value="">-- Ch·ªçn l·ªõp h·ªçc --</option>
                                @if (classes != null)
                                {
                                    @foreach (var lopHoc in classes)
                                    {
                                        <option value="@lopHoc.LopHocId">@lopHoc.TenLop (@lopHoc.GioBatDau.ToString("HH:mm")-@lopHoc.GioKetThuc.ToString("HH:mm"))</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="flex gap-2 pt-4 border-t">
                        <button onclick="confirmQuickBooking('${date.toISOString().split('T')[0]}')" class="flex-1 bg-green-600 text-white px-4 py-2 rounded-md text-sm hover:bg-green-700">
                            X√°c nh·∫≠n ƒë·∫∑t l·ªãch
                        </button>
                        <button onclick="closeQuickBookingModal()" class="flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-md text-sm hover:bg-gray-400">
                            H·ªßy b·ªè
                        </button>
                    </div>
                </div>
            `;
            
            document.getElementById('quickBookingContent').innerHTML = content;
            document.getElementById('quickBookingModal').classList.remove('hidden');
        }

        function confirmQuickBooking(date) {
            const classId = document.getElementById('quickBookingClass').value;
            if (!classId) {
                alert('Vui l√≤ng ch·ªçn l·ªõp h·ªçc');
                return;
            }
            
            // Redirect to create booking page with pre-filled data
            window.location.href = `@Url.Action("Create")?classId=${classId}&date=${date}`;
        }

        function loadTodaySchedule() {
            // Placeholder for today's schedule
            setTimeout(() => {
                document.getElementById('todaySchedule').innerHTML = `
                    <div class="text-center py-4 text-gray-500">
                        <p>Kh√¥ng c√≥ l·ªãch n√†o h√¥m nay</p>
                    </div>
                `;
            }, 1000);
        }

        function loadQuickStats() {
            // Placeholder for quick stats
            setTimeout(() => {
                document.getElementById('totalBookings').textContent = '0';
                document.getElementById('thisWeekBookings').textContent = '0';
                document.getElementById('upcomingBookings').textContent = '0';
                document.getElementById('completedBookings').textContent = '0';
            }, 500);
        }

        function getStatusText(status) {
            switch(status) {
                case 'BOOKED': return 'ƒê√£ ƒë·∫∑t';
                case 'CANCELED': return 'ƒê√£ h·ªßy';
                case 'ATTENDED': return 'ƒê√£ tham gia';
                default: return status;
            }
        }

        function editBooking(bookingId) {
            // Implement edit booking
            alert('Ch·ª©c nƒÉng ch·ªânh s·ª≠a ƒë·∫∑t l·ªãch s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai trong phi√™n b·∫£n ti·∫øp theo.');
        }

        function cancelBooking(bookingId) {
            if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë·∫∑t l·ªãch n√†y kh√¥ng?')) {
                // Implement cancel booking
                alert('Ch·ª©c nƒÉng h·ªßy ƒë·∫∑t l·ªãch s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai trong phi√™n b·∫£n ti·∫øp theo.');
            }
        }

        function closeEventModal() {
            document.getElementById('eventModal').classList.add('hidden');
        }

        function closeQuickBookingModal() {
            document.getElementById('quickBookingModal').classList.add('hidden');
        }

        // Close modals when clicking outside
        document.getElementById('eventModal').addEventListener('click', function(e) {
            if (e.target === this) closeEventModal();
        });

        document.getElementById('quickBookingModal').addEventListener('click', function(e) {
            if (e.target === this) closeQuickBookingModal();
        });
    </script>
}
