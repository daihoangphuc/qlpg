@{
    ViewData["Title"] = "L·ªãch d·∫°y - Hu·∫•n luy·ªán vi√™n";
    Layout = "_TrainerLayout";
    var myClasses = ViewBag.MyClasses as IEnumerable<GymManagement.Web.Data.Models.LopHoc>;
}

<div class="p-6">
    <!-- Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">üìÖ L·ªãch d·∫°y c·ªßa t√¥i</h1>
        <p class="text-gray-600">Xem v√† qu·∫£n l√Ω l·ªãch d·∫°y c√° nh√¢n</p>
    </div>

    <!-- Calendar Controls -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <div class="flex flex-col md:flex-row justify-between items-center gap-4">
            <div class="flex items-center gap-4">
                <button id="prevMonth" class="p-2 text-gray-600 hover:text-purple-600 hover:bg-purple-50 rounded-md transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                </button>
                <h2 id="currentMonth" class="text-xl font-semibold text-gray-900"></h2>
                <button id="nextMonth" class="p-2 text-gray-600 hover:text-purple-600 hover:bg-purple-50 rounded-md transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </button>
            </div>
            
            <div class="flex items-center gap-4">
                <button id="todayBtn" class="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors">
                    H√¥m nay
                </button>
                <div class="flex items-center gap-2">
                    <label for="classFilter" class="text-sm font-medium text-gray-700">L·ªçc theo l·ªõp:</label>
                    <select id="classFilter" class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-500">
                        <option value="">T·∫•t c·∫£ l·ªõp</option>
                        @if (myClasses != null)
                        {
                            @foreach (var lopHoc in myClasses)
                            {
                                <option value="@lopHoc.LopHocId">@lopHoc.TenLop</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Calendar -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div id="calendar"></div>
    </div>

    <!-- Legend -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Ch√∫ th√≠ch</h3>
        <div class="flex flex-wrap gap-4">
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-blue-500 rounded"></div>
                <span class="text-sm text-gray-700">L·ªõp h·ªçc ƒë√£ l√™n l·ªãch</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-red-500 rounded"></div>
                <span class="text-sm text-gray-700">L·ªõp h·ªçc b·ªã h·ªßy</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-green-500 rounded"></div>
                <span class="text-sm text-gray-700">L·ªõp h·ªçc ƒë√£ ho√†n th√†nh</span>
            </div>
        </div>
    </div>

    <!-- Today's Schedule -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">üìã L·ªãch d·∫°y h√¥m nay</h3>
        <div id="todaySchedule">
            <div class="text-center py-4 text-gray-500">
                <svg class="w-8 h-8 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <p>ƒêang t·∫£i l·ªãch d·∫°y h√¥m nay...</p>
            </div>
        </div>
    </div>
</div>

<!-- Event Details Modal -->
<div id="eventModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">Chi ti·∫øt l·ªõp h·ªçc</h3>
                    <button onclick="closeEventModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <div id="eventDetails">
                    <!-- Event details will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        let calendar;
        let currentClassFilter = '';

        document.addEventListener('DOMContentLoaded', function() {
            initializeCalendar();
            loadTodaySchedule();
            
            // Event listeners
            document.getElementById('classFilter').addEventListener('change', function() {
                currentClassFilter = this.value;
                calendar.refetchEvents();
            });
            
            document.getElementById('todayBtn').addEventListener('click', function() {
                calendar.today();
            });
        });

        function initializeCalendar() {
            const calendarEl = document.getElementById('calendar');
            
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'vi',
                headerToolbar: {
                    left: '',
                    center: '',
                    right: ''
                },
                height: 'auto',
                events: function(info, successCallback, failureCallback) {
                    loadScheduleEvents(info.start, info.end, successCallback, failureCallback);
                },
                eventClick: function(info) {
                    showEventDetails(info.event);
                },
                datesSet: function(info) {
                    updateMonthDisplay(info.start);
                }
            });
            
            calendar.render();
            
            // Custom navigation
            document.getElementById('prevMonth').addEventListener('click', () => calendar.prev());
            document.getElementById('nextMonth').addEventListener('click', () => calendar.next());
        }

        function loadScheduleEvents(start, end, successCallback, failureCallback) {
            const url = '@Url.Action("GetScheduleEvents", "Trainer")';
            const params = new URLSearchParams({
                start: start.toISOString(),
                end: end.toISOString()
            });
            
            if (currentClassFilter) {
                params.append('classId', currentClassFilter);
            }
            
            fetch(`${url}?${params}`)
                .then(response => response.json())
                .then(data => {
                    successCallback(data);
                })
                .catch(error => {
                    console.error('Error loading schedule events:', error);
                    failureCallback(error);
                });
        }

        function updateMonthDisplay(date) {
            const monthNames = [
                'Th√°ng 1', 'Th√°ng 2', 'Th√°ng 3', 'Th√°ng 4', 'Th√°ng 5', 'Th√°ng 6',
                'Th√°ng 7', 'Th√°ng 8', 'Th√°ng 9', 'Th√°ng 10', 'Th√°ng 11', 'Th√°ng 12'
            ];
            
            const monthDisplay = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;
            document.getElementById('currentMonth').textContent = monthDisplay;
        }

        function showEventDetails(event) {
            const details = `
                <div class="space-y-3">
                    <div>
                        <h4 class="font-semibold text-gray-900">${event.title}</h4>
                    </div>
                    <div class="text-sm text-gray-600">
                        <p><strong>Th·ªùi gian:</strong> ${event.start.toLocaleString('vi-VN')}</p>
                        <p><strong>K·∫øt th√∫c:</strong> ${event.end.toLocaleString('vi-VN')}</p>
                        <p><strong>Tr·∫°ng th√°i:</strong> 
                            <span class="px-2 py-1 text-xs rounded-full ${getStatusClass(event.extendedProps.status)}">
                                ${getStatusText(event.extendedProps.status)}
                            </span>
                        </p>
                        <p><strong>ƒê√£ ƒëƒÉng k√Ω:</strong> ${event.extendedProps.booked}/${event.extendedProps.capacity} ng∆∞·ªùi</p>
                    </div>
                </div>
            `;
            
            document.getElementById('eventDetails').innerHTML = details;
            document.getElementById('eventModal').classList.remove('hidden');
        }

        function closeEventModal() {
            document.getElementById('eventModal').classList.add('hidden');
        }

        function getStatusClass(status) {
            switch(status) {
                case 'SCHEDULED': return 'bg-blue-100 text-blue-800';
                case 'CANCELED': return 'bg-red-100 text-red-800';
                case 'FINISHED': return 'bg-green-100 text-green-800';
                default: return 'bg-gray-100 text-gray-800';
            }
        }

        function getStatusText(status) {
            switch(status) {
                case 'SCHEDULED': return 'ƒê√£ l√™n l·ªãch';
                case 'CANCELED': return 'ƒê√£ h·ªßy';
                case 'FINISHED': return 'ƒê√£ ho√†n th√†nh';
                default: return 'Kh√¥ng x√°c ƒë·ªãnh';
            }
        }

        function loadTodaySchedule() {
            const today = new Date();
            const todayStr = today.toISOString().split('T')[0];
            
            // Placeholder for today's schedule
            setTimeout(() => {
                document.getElementById('todaySchedule').innerHTML = `
                    <div class="text-center py-4 text-gray-500">
                        <p>Kh√¥ng c√≥ l·ªõp h·ªçc n√†o h√¥m nay</p>
                    </div>
                `;
            }, 1000);
        }

        // Close modal when clicking outside
        document.getElementById('eventModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeEventModal();
            }
        });
    </script>
}
